
package integration.taleo.generated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "IWebAPI", targetNamespace = "urn:TBEWebAPI")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IWebAPI {


    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createTaskReturn", partName = "createTaskReturn")
    public long createTask(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        TaskBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createReferenceReturn", partName = "createReferenceReturn")
    public long createReference(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ReferenceBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createEventReturn", partName = "createEventReturn")
    public long createEvent(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        CalendarEventBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @return
     *     returns java.lang.String
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "loginReturn", partName = "loginReturn")
    public String login(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1,
        @WebParam(name = "in2", partName = "in2")
        String in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void logout(
        @WebParam(name = "in0", partName = "in0")
        String in0)
        throws WebServicesException
    ;

    /**
     * 
     * @param in0
     * @return
     *     returns java.lang.String
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getEnabledServicesReturn", partName = "getEnabledServicesReturn")
    public String getEnabledServices(
        @WebParam(name = "in0", partName = "in0")
        String in0)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getLoginTokenReturn", partName = "getLoginTokenReturn")
    public String getLoginToken(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.SearchResultArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "searchAccountReturn", partName = "searchAccountReturn")
    public SearchResultArr searchAccount(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        Map in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.AccountBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getAccountByIdReturn", partName = "getAccountByIdReturn")
    public AccountBean getAccountById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createAccountReturn", partName = "createAccountReturn")
    public long createAccount(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        AccountBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateAccount(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        AccountBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteAccount(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getBackgroundChecksByCandidateReturn", partName = "getBackgroundChecksByCandidateReturn")
    public LongArr getBackgroundChecksByCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.BackgroundCheckBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getBackgroundCheckByIdReturn", partName = "getBackgroundCheckByIdReturn")
    public BackgroundCheckBean getBackgroundCheckById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createBackgroundCheckReturn", partName = "createBackgroundCheckReturn")
    public long createBackgroundCheck(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        BackgroundCheckBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateBackgroundCheck(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        BackgroundCheckBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteBackgroundCheck(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getEventByEntityReturn", partName = "getEventByEntityReturn")
    public LongArr getEventByEntity(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1,
        @WebParam(name = "in2", partName = "in2")
        long in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getPublicEventsReturn", partName = "getPublicEventsReturn")
    public LongArr getPublicEvents(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        XMLGregorianCalendar in1,
        @WebParam(name = "in2", partName = "in2")
        XMLGregorianCalendar in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.CalendarEventBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getEventByIdReturn", partName = "getEventByIdReturn")
    public CalendarEventBean getEventById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateEvent(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        CalendarEventBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteEvent(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.SearchResultArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "searchCandidateReturn", partName = "searchCandidateReturn")
    public SearchResultArr searchCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        Map in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.CandidateBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getCandidateByIdReturn", partName = "getCandidateByIdReturn")
    public CandidateBean getCandidateById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getRequisitionsReturn", partName = "getRequisitionsReturn")
    public LongArr getRequisitions(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getOffersReturn", partName = "getOffersReturn")
    public LongArr getOffers(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createCandidateReturn", partName = "createCandidateReturn")
    public long createCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        CandidateBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        CandidateBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in3
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void setBinaryResume(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        ByteArr in3)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.ByteArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getBinaryResumeReturn", partName = "getBinaryResumeReturn")
    public ByteArr getBinaryResume(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void submitCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        LongArr in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void removeCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        long in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.SearchResultArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "searchContactReturn", partName = "searchContactReturn")
    public SearchResultArr searchContact(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        Map in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.ContactBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getContactByIdReturn", partName = "getContactByIdReturn")
    public ContactBean getContactById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createContactReturn", partName = "createContactReturn")
    public long createContact(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ContactBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateContact(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ContactBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteContact(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.HistoryBeanArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getCandidateHistoryReturn", partName = "getCandidateHistoryReturn")
    public HistoryBeanArr getCandidateHistory(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.HistoryBeanArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getRequisitionHistoryReturn", partName = "getRequisitionHistoryReturn")
    public HistoryBeanArr getRequisitionHistory(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.HistoryBeanArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getAccountHistoryReturn", partName = "getAccountHistoryReturn")
    public HistoryBeanArr getAccountHistory(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.HistoryBeanArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getContactHistoryReturn", partName = "getContactHistoryReturn")
    public HistoryBeanArr getContactHistory(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.HistoryBeanArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getUserHistoryReturn", partName = "getUserHistoryReturn")
    public HistoryBeanArr getUserHistory(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getInterviewsByCandidateReturn", partName = "getInterviewsByCandidateReturn")
    public LongArr getInterviewsByCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.InterviewBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getInterviewByIdReturn", partName = "getInterviewByIdReturn")
    public InterviewBean getInterviewById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createInterviewReturn", partName = "createInterviewReturn")
    public long createInterview(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        InterviewBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateInterview(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        InterviewBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteInterview(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.OfferBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getOfferByIdReturn", partName = "getOfferByIdReturn")
    public OfferBean getOfferById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createOfferReturn", partName = "createOfferReturn")
    public long createOffer(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        OfferBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateOffer(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        OfferBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in3
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void setBinaryOffer(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        ByteArr in3)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.ByteArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getBinaryOfferReturn", partName = "getBinaryOfferReturn")
    public ByteArr getBinaryOffer(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteOffer(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getReferencesByCandidateReturn", partName = "getReferencesByCandidateReturn")
    public LongArr getReferencesByCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.ReferenceBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getReferenceByIdReturn", partName = "getReferenceByIdReturn")
    public ReferenceBean getReferenceById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateReference(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ReferenceBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteReference(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.SearchResultArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "searchRequisitionReturn", partName = "searchRequisitionReturn")
    public SearchResultArr searchRequisition(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        Map in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.RequisitionBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getRequisitionByIdReturn", partName = "getRequisitionByIdReturn")
    public RequisitionBean getRequisitionById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getCandidatesByRequisitionReturn", partName = "getCandidatesByRequisitionReturn")
    public LongArr getCandidatesByRequisition(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getAssociatedUsersReturn", partName = "getAssociatedUsersReturn")
    public LongArr getAssociatedUsers(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        String in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createRequisitionReturn", partName = "createRequisitionReturn")
    public long createRequisition(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        RequisitionBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateRequisition(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        RequisitionBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void setAssociatedUser(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        long in3,
        @WebParam(name = "in4", partName = "in4")
        int in4)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in3
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void removeAssociatedUser(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        long in3)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteRequisition(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getTaskByEntityReturn", partName = "getTaskByEntityReturn")
    public LongArr getTaskByEntity(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1,
        @WebParam(name = "in2", partName = "in2")
        long in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in3
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getTaskByUserReturn", partName = "getTaskByUserReturn")
    public LongArr getTaskByUser(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        XMLGregorianCalendar in2,
        @WebParam(name = "in3", partName = "in3")
        XMLGregorianCalendar in3)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.TaskBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getTaskByIdReturn", partName = "getTaskByIdReturn")
    public TaskBean getTaskById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateTask(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        TaskBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteTask(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.SearchResultArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "searchUserReturn", partName = "searchUserReturn")
    public SearchResultArr searchUser(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        Map in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.UserBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getUserByIdReturn", partName = "getUserByIdReturn")
    public UserBean getUserById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createUserReturn", partName = "createUserReturn")
    public long createUser(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        UserBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param additionalEntities
     * @param sessionId
     * @param userBeanToCreate
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createUserWithPermissionsReturn", partName = "createUserWithPermissionsReturn")
    public long createUserWithPermissions(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "userBeanToCreate", partName = "userBeanToCreate")
        UserBean userBeanToCreate,
        @WebParam(name = "additionalEntities", partName = "additionalEntities")
        Map additionalEntities)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateUser(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        UserBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteUser(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getContactLogsByEntityReturn", partName = "getContactLogsByEntityReturn")
    public LongArr getContactLogsByEntity(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1,
        @WebParam(name = "in2", partName = "in2")
        long in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.ContactLogBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getContactLogByIdReturn", partName = "getContactLogByIdReturn")
    public ContactLogBean getContactLogById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createContactLogReturn", partName = "createContactLogReturn")
    public long createContactLog(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ContactLogBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createEmailLogReturn", partName = "createEmailLogReturn")
    public long createEmailLog(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        String in3,
        @WebParam(name = "in4", partName = "in4")
        XMLGregorianCalendar in4)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createEmailSentLogReturn", partName = "createEmailSentLogReturn")
    public long createEmailSentLog(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        String in3,
        @WebParam(name = "in4", partName = "in4")
        XMLGregorianCalendar in4)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void updateContactLog(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ContactLogBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteContactLog(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in0
     * @return
     *     returns integration.taleo.generated.Map
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getSystemPropsReturn", partName = "getSystemPropsReturn")
    public Map getSystemProps(
        @WebParam(name = "in0", partName = "in0")
        String in0)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in0
     * @return
     *     returns java.lang.String
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getCandReqStatusReturn", partName = "getCandReqStatusReturn")
    public String getCandReqStatus(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        long in2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns java.lang.String
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "parseResumeReturn", partName = "parseResumeReturn")
    public String parseResume(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ByteArr in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @param fileName
     * @param referredBy
     * @return
     *     returns integration.taleo.generated.CandidateInsertResultBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "parseResumeIntoCandidateReturn", partName = "parseResumeIntoCandidateReturn")
    public CandidateInsertResultBean parseResumeIntoCandidate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        ByteArr in1,
        @WebParam(name = "referredBy", partName = "referredBy")
        String referredBy,
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.MetadataArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getMetadataReturn", partName = "getMetadataReturn")
    public MetadataArr getMetadata(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LookupArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getLookupReturn", partName = "getLookupReturn")
    public LookupArr getLookup(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param entityId1
     * @param sessionId
     * @param entityId2
     * @param entityType2
     * @param entityType1
     * @throws WebServicesException
     */
    @WebMethod
    public void createLink(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "entityType1", partName = "entityType1")
        String entityType1,
        @WebParam(name = "entityId1", partName = "entityId1")
        long entityId1,
        @WebParam(name = "entityType2", partName = "entityType2")
        String entityType2,
        @WebParam(name = "entityId2", partName = "entityId2")
        long entityId2)
        throws WebServicesException
    ;

    /**
     * 
     * @param entityId1
     * @param sessionId
     * @param entityId2
     * @param entityType2
     * @param entityType1
     * @throws WebServicesException
     */
    @WebMethod
    public void removeLink(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "entityType1", partName = "entityType1")
        String entityType1,
        @WebParam(name = "entityId1", partName = "entityId1")
        long entityId1,
        @WebParam(name = "entityType2", partName = "entityType2")
        String entityType2,
        @WebParam(name = "entityId2", partName = "entityId2")
        long entityId2)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @param in5
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createAttachmentReturn", partName = "createAttachmentReturn")
    public long createAttachment(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        String in3,
        @WebParam(name = "in4", partName = "in4")
        String in4,
        @WebParam(name = "in5", partName = "in5")
        ByteArr in5)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param description
     * @param data
     * @param fileName
     * @param entityId
     * @param contentType
     * @param entityType
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createEntityAttachmentReturn", partName = "createEntityAttachmentReturn")
    public long createEntityAttachment(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "entityType", partName = "entityType")
        String entityType,
        @WebParam(name = "entityId", partName = "entityId")
        long entityId,
        @WebParam(name = "description", partName = "description")
        String description,
        @WebParam(name = "fileName", partName = "fileName")
        String fileName,
        @WebParam(name = "contentType", partName = "contentType")
        String contentType,
        @WebParam(name = "data", partName = "data")
        ByteArr data)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @param in5
     * @throws WebServicesException
     */
    @WebMethod
    public void updateAttachment(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        String in2,
        @WebParam(name = "in3", partName = "in3")
        String in3,
        @WebParam(name = "in4", partName = "in4")
        String in4,
        @WebParam(name = "in5", partName = "in5")
        ByteArr in5)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteAttachment(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getAttachmentsReturn", partName = "getAttachmentsReturn")
    public LongArr getAttachments(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param entityId
     * @param entityType
     * @return
     *     returns integration.taleo.generated.LongArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getEntityAttachmentsReturn", partName = "getEntityAttachmentsReturn")
    public LongArr getEntityAttachments(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "entityType", partName = "entityType")
        String entityType,
        @WebParam(name = "entityId", partName = "entityId")
        long entityId)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.AttachmentBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getAttachmentReturn", partName = "getAttachmentReturn")
    public AttachmentBean getAttachment(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.ByteArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getAttachmentDataReturn", partName = "getAttachmentDataReturn")
    public ByteArr getAttachmentData(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @param in5
     * @param in6
     * @param in7
     * @return
     *     returns integration.taleo.generated.CandidateDetailsBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getCandidateDetailsByIdReturn", partName = "getCandidateDetailsByIdReturn")
    public CandidateDetailsBean getCandidateDetailsById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1,
        @WebParam(name = "in2", partName = "in2")
        boolean in2,
        @WebParam(name = "in3", partName = "in3")
        boolean in3,
        @WebParam(name = "in4", partName = "in4")
        boolean in4,
        @WebParam(name = "in5", partName = "in5")
        boolean in5,
        @WebParam(name = "in6", partName = "in6")
        boolean in6,
        @WebParam(name = "in7", partName = "in7")
        boolean in7)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createRequisitionTemplateReturn", partName = "createRequisitionTemplateReturn")
    public long createRequisitionTemplate(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        RequisitionBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param posterId
     * @param sessionId
     * @param formVersion
     * @param requisitionId
     * @throws WebServicesException
     */
    @WebMethod
    public void postRequisition(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "requisitionId", partName = "requisitionId")
        long requisitionId,
        @WebParam(name = "posterId", partName = "posterId")
        long posterId,
        @WebParam(name = "formVersion", partName = "formVersion")
        int formVersion)
        throws WebServicesException
    ;

    /**
     * 
     * @param posterId
     * @param sessionId
     * @param requisitionId
     * @throws WebServicesException
     */
    @WebMethod
    public void unpostRequisition(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "requisitionId", partName = "requisitionId")
        long requisitionId,
        @WebParam(name = "posterId", partName = "posterId")
        long posterId)
        throws WebServicesException
    ;

    /**
     * 
     * @param statusId
     * @param doRanking
     * @param candidateId
     * @param reasonId
     * @param sessionId
     * @param requisitionIds
     * @throws WebServicesException
     */
    @WebMethod
    public void upsertCandidateToRequisitions(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "candidateId", partName = "candidateId")
        long candidateId,
        @WebParam(name = "requisitionIds", partName = "requisitionIds")
        LongArr requisitionIds,
        @WebParam(name = "statusId", partName = "statusId")
        long statusId,
        @WebParam(name = "reasonId", partName = "reasonId")
        long reasonId,
        @WebParam(name = "doRanking", partName = "doRanking")
        boolean doRanking)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param searchParams
     * @return
     *     returns integration.taleo.generated.SearchResultArr
     */
    @WebMethod
    @WebResult(name = "searchEmployeeReturn", partName = "searchEmployeeReturn")
    public SearchResultArr searchEmployee(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "searchParams", partName = "searchParams")
        Map searchParams);

    /**
     * 
     * @param employeeId
     * @param sessionId
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteEmployee(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "employeeId", partName = "employeeId")
        long employeeId)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param employeeNumber
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteEmployeeByNumber(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "employeeNumber", partName = "employeeNumber")
        String employeeNumber)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @param employeeNumber
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "upsertEmployeeReturn", partName = "upsertEmployeeReturn")
    public long upsertEmployee(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "employeeNumber", partName = "employeeNumber")
        String employeeNumber,
        @WebParam(name = "bean", partName = "bean")
        EmployeeBean bean)
        throws WebServicesException
    ;

    /**
     * 
     * @param additionalEntities
     * @param sessionId
     * @param employeeNumber
     * @return
     *     returns integration.taleo.generated.EmployeeBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getEmployeeByNumberReturn", partName = "getEmployeeByNumberReturn")
    public EmployeeBean getEmployeeByNumber(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "employeeNumber", partName = "employeeNumber")
        String employeeNumber,
        @WebParam(name = "additionalEntities", partName = "additionalEntities")
        Vector additionalEntities)
        throws WebServicesException
    ;

    /**
     * 
     * @param employeeId
     * @param additionalEntities
     * @param sessionId
     * @return
     *     returns integration.taleo.generated.EmployeeBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getEmployeeByIdReturn", partName = "getEmployeeByIdReturn")
    public EmployeeBean getEmployeeById(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "employeeId", partName = "employeeId")
        long employeeId,
        @WebParam(name = "additionalEntities", partName = "additionalEntities")
        Vector additionalEntities)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createEmployeeReturn", partName = "createEmployeeReturn")
    public long createEmployee(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "bean", partName = "bean")
        EmployeeBean bean)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @throws WebServicesException
     */
    @WebMethod
    public void updateEmployee(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "bean", partName = "bean")
        EmployeeBean bean)
        throws WebServicesException
    ;

    /**
     * 
     * @param candidateId
     * @param sessionId
     * @return
     *     returns integration.taleo.generated.WorkHistoryArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getCandidateWorkHistoryReturn", partName = "getCandidateWorkHistoryReturn")
    public WorkHistoryArr getCandidateWorkHistory(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "candidateId", partName = "candidateId")
        long candidateId)
        throws WebServicesException
    ;

    /**
     * 
     * @param rollingEntityType
     * @param sessionId
     * @param entityId
     * @param entityType
     * @return
     *     returns integration.taleo.generated.FlexRollingEntityBeanArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getRollingEntitiesReturn", partName = "getRollingEntitiesReturn")
    public FlexRollingEntityBeanArr getRollingEntities(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "rollingEntityType", partName = "rollingEntityType")
        String rollingEntityType,
        @WebParam(name = "entityType", partName = "entityType")
        String entityType,
        @WebParam(name = "entityId", partName = "entityId")
        long entityId)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param rollingEntityBean
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "upsertRollingEntityReturn", partName = "upsertRollingEntityReturn")
    public long upsertRollingEntity(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "rollingEntityBean", partName = "rollingEntityBean")
        FlexRollingEntityBean rollingEntityBean)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param rollingEntityId
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteRollingEntity(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "rollingEntityId", partName = "rollingEntityId")
        long rollingEntityId)
        throws WebServicesException
    ;

    /**
     * 
     * @param orgCode
     * @param partnerCode
     * @param currentTimeMillis
     * @param digest
     * @return
     *     returns java.lang.String
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "loginPartnerReturn", partName = "loginPartnerReturn")
    public String loginPartner(
        @WebParam(name = "orgCode", partName = "orgCode")
        String orgCode,
        @WebParam(name = "partnerCode", partName = "partnerCode")
        String partnerCode,
        @WebParam(name = "currentTimeMillis", partName = "currentTimeMillis")
        long currentTimeMillis,
        @WebParam(name = "digest", partName = "digest")
        String digest)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createRegionReturn", partName = "createRegionReturn")
    public long createRegion(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        RegionBean in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createLocationReturn", partName = "createLocationReturn")
    public long createLocation(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "bean", partName = "bean")
        LocationBean bean)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "createDepartmentReturn", partName = "createDepartmentReturn")
    public long createDepartment(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "bean", partName = "bean")
        DepartmentBean bean)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.RegionBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getRegionByIdReturn", partName = "getRegionByIdReturn")
    public RegionBean getRegionById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.DepartmentBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getDepartmentByIdReturn", partName = "getDepartmentByIdReturn")
    public DepartmentBean getDepartmentById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LocationBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getLocationByIdReturn", partName = "getLocationByIdReturn")
    public LocationBean getLocationById(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        long in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.RegionBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getRegionByNameReturn", partName = "getRegionByNameReturn")
    public RegionBean getRegionByName(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.DepartmentBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getDepartmentByNameReturn", partName = "getDepartmentByNameReturn")
    public DepartmentBean getDepartmentByName(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns integration.taleo.generated.LocationBean
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getLocationByNameReturn", partName = "getLocationByNameReturn")
    public LocationBean getLocationByName(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "in1", partName = "in1")
        String in1)
        throws WebServicesException
    ;

    /**
     * 
     * @param in0
     * @param regionId
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteRegion(
        @WebParam(name = "in0", partName = "in0")
        String in0,
        @WebParam(name = "regionId", partName = "regionId")
        long regionId)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param locationId
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteLocation(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "locationId", partName = "locationId")
        long locationId)
        throws WebServicesException
    ;

    /**
     * 
     * @param sessionId
     * @param departmentId
     * @throws WebServicesException
     */
    @WebMethod
    public void deleteDepartment(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "departmentId", partName = "departmentId")
        long departmentId)
        throws WebServicesException
    ;

    /**
     * 
     * @param in0
     * @return
     *     returns integration.taleo.generated.RegionArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getRegionsReturn", partName = "getRegionsReturn")
    public RegionArr getRegions(
        @WebParam(name = "in0", partName = "in0")
        String in0)
        throws WebServicesException
    ;

    /**
     * 
     * @param in0
     * @return
     *     returns integration.taleo.generated.DepartmentArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getDepartmentsReturn", partName = "getDepartmentsReturn")
    public DepartmentArr getDepartments(
        @WebParam(name = "in0", partName = "in0")
        String in0)
        throws WebServicesException
    ;

    /**
     * 
     * @param in0
     * @return
     *     returns integration.taleo.generated.LocationArr
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "getLocationsReturn", partName = "getLocationsReturn")
    public LocationArr getLocations(
        @WebParam(name = "in0", partName = "in0")
        String in0)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "upsertRegionReturn", partName = "upsertRegionReturn")
    public long upsertRegion(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "bean", partName = "bean")
        RegionBean bean)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "upsertLocationReturn", partName = "upsertLocationReturn")
    public long upsertLocation(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "bean", partName = "bean")
        LocationBean bean)
        throws WebServicesException
    ;

    /**
     * 
     * @param bean
     * @param sessionId
     * @return
     *     returns long
     * @throws WebServicesException
     */
    @WebMethod
    @WebResult(name = "upsertDepartmentReturn", partName = "upsertDepartmentReturn")
    public long upsertDepartment(
        @WebParam(name = "sessionId", partName = "sessionId")
        String sessionId,
        @WebParam(name = "bean", partName = "bean")
        DepartmentBean bean)
        throws WebServicesException
    ;

}
